Общие классы
~~~~~~~~~~~~
В этом разделе описаны общие классы, от которых наследуются все сервисы,
а также классы, используемые всеми сервисами.

Модуль ``hierarchy``
""""""""""""""""""""
.. automodule:: src.common.hierarchy
   :members:
   :private-members:
   :show-inheritance:
   :noindex:

Модуль ``logger``
"""""""""""""""""
.. automodule:: src.common.logger
   :members:
   :private-members:
   :exclude-members: InterceptHandler
   :show-inheritance:
   :noindex:

Модуль ``base_svc``
"""""""""""""""""""
.. automodule:: src.common.base_svc
    :members:
    :private-members:
    :show-inheritance:
    :noindex:

Модуль ``base_svc_settings``
"""""""""""""""""""""""""""""
.. automodule:: src.common.base_svc_settings
    :members:
    :show-inheritance:
    :noindex:

Модуль ``svc``
""""""""""""""
.. automodule:: src.common.svc
    :members:
    :private-members:
    :show-inheritance:
    :noindex:

Модуль ``svc_settings``
"""""""""""""""""""""""
.. automodule:: src.common.svc_settings
    :members:
    :show-inheritance:
    :noindex:

Модуль ``api_crud_svc``
"""""""""""""""""""""""
.. automodule:: src.common.api_crud_svc
    :members:
    :show-inheritance:
    :noindex:

Модуль ``model_crud_svc``
"""""""""""""""""""""""""
Модуль содержит базовый класс сервиса, реализующего функциональность работы с
иерархией для какой-либо сущности (создание, обновление, поиск, удаление
узлов).
Сообщения сервиса:

.. image:: pics/mes_entity_model_crud.png

**Обновление и удаление узлов-экземпляров сущности**

Внутри иерархии узла-экземпляра сущности могут быть узлы-экземпляры других,
заранее неизвестных сущностей.

Удаление узла-экземпляра сущности приводит к удалению всей принадлежащей ему
иерархии. Соответственно, сервисы, управляющие другими сущностями, возможно,
входящими в иерархию узла-родителя, будут поставлены перед фактом удаления
"своих" узлов.

Это неприемлемо, так как в процессе удаления узла в иерархии должна быть
проделана определённая работа. К примеру, при удалении тега - удаление
истории его значений. Более того, возможно, что определённые дочерние сущности
могут запретить удаление родительского узла. Например, удаление константы не
может быть произведено, если она используется в каком-либо методе.

Для решения этой проблемы используется следующий алгоритм (рассмотрим
на примере сервисов ``tags_model_crud`` и ``objects_model_crud``):

1. Сервис ``tags_model_crud`` заинтересован в оповещениях об изменении/удалении
   узлов сущности ``objects``, поэтому посылает сообщение ``subscribe``
   сервису ``objects_model_crud``, тем самым предупреждая его о том,
   что заинтересован в уведомлениях о изменении/удалении объектов.
2. Сервис ``objects_model_crud`` поддерживает список тех, кого необходимо
   уведомлять об изменениях в иерархии.
3. При удалении объекта сервис ``objects_model_crud`` посылает всем
   подписавшимся RPC-сообщения:
   a. ``mayDelete``. В теле сообщения указывается id объекта для удаления.
      В поле ``reply_to`` ``objects_model_crud`` указывает ``routing_key``
      для очереди, в которой будет ожидать ответ.

      Получив сообщение ``mayDelete``, ``tags_model_crud`` ищет в иерархии,
      начинающейся с удаляемого объекта, все теги и сам посылает сообщение
      ``mayDelete`` уже своим подписчикам, указав список всех тегов, которые
      планируются к удалению.

      Если хотя бы от одного подписчика придёт ответ ``no``, что означает,
      что объект удалять нельзя, то процедура прервётся.
   b. Если все подписчики прислали ответ ``ok``, то ``objects_model_crud``
      рассылает всем новое сообщение - ``deleting``. Получив это сообщение,
      ``tags_model_crud`` должен выполнить работу по удалению всех тегов
      удаляемого объекта (при этом сам должен разослать сообщение
      ``deleting`` всем своим подписчикам).
   c. После того, как в ответ на ``deleting`` вернулись ответы ``ok`` от всех
      подписчиков, ``objects_model_crud`` удаляет объет.
   d. ``objects_model_crud`` посылает сообщение ``deleted``.

.. automodule:: src.common.model_crud_svc
   :members:
   :private-members:
   :show-inheritance:
   :noindex:

Модуль ``model_crud_settings``
""""""""""""""""""""""""""""""
.. automodule:: src.common.model_crud_settings
   :members:
   :private-members:
   :show-inheritance:
   :noindex:
