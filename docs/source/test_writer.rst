Тестовый пример
===============
После успешной :doc:`установки <installation>` компонентов выполним тестовый пример, показывающий совместную работу 
трёх компонентов:

#. Скрипт, записывающий в цикле данные в базу;
#. Victoriametrics, хранящая данные;
#. Grafana для отображения данных в режиме реального времени.

В качестве протокола, который будем использовать в качестве общения между всеми компонентами, возьмём `OpenTSDB <http://opentsdb.net/>`_, так как это достаточно
простой протокол.

.. warning::

   OpenTSDB не поддерживает запись данных в виде строк.
   Только целые и вещественные числа.

Настройка Victoriametrics
-------------------------
Для того, чтобы Victoriametrics могла работать по протоколу OpenTSDB, необходимо в командную строку её запуска добавить ключ.

Для этого открываем на редактирование файл с ключами командной строки:

.. code-block:: bash
    
   $ sudo nano /var/snap/victoriametrics/133/extra_flags

...и приводим его к виду:

.. code-block::

   FLAGS="-opentsdbHTTPListenAddr=:4242"
   
Перезапускаем Victoriametrics:

.. code-block:: bash

   $ sudo snap restart victoriametrics

Теперь Victoriametrics будет работать по протоколу OpenTSDB по порту 4242.

Тестовый скрипт
---------------
Для тестовой записи одной метрики есть скрипт ``test_writer.py``.
Запускаем его на исполнение:

.. code-block:: bash

   $ python3 test_writer.py h=localhost:4242 m=temp f=2

Скрипт можно запускать и без ключей, в этом случае в качестве значений по умолчанию будут приняты указанные выше.  
Ключи указывают, что запись будет вестить на локальный сервер, имя метрики - temp, частота записи значений - раз в две секунды.  
Скрипт в каждом цикле случайным образом выбирает значение от -10 до 10 и записывает его в указанную метрику.

Настройка Grafana
-----------------
Теперь осталось создать панель в Grafan'е, на которой мы будем смотреть на нашу метрику.

Источник данных
~~~~~~~~~~~~~~~
#. Создадим источник данных, для чего в пункте меню "Configurations" выберем "Data sources". На открывшейся странице нажмём кнопку "Add data source":

   .. image:: pics/ds_1.png

#. Появится список типов источников данных, из которых выберем первый - "Prometheus".

   .. image:: pics/ds_2.png

#. В окне настройки источника данных изменим только адрес: впишем ``http://localhost:8428``:

   .. image:: pics/ds_3.png

Доска
~~~~~
#. Создадим доску:

   .. image:: pics/d_1.png

#. В окне создания доски выберем пункт "Add new panel":

   .. image:: pics/d_2.png

#. В окне создания панели выберем источник данных "Prometheus" и нажмём кнопку "Metrics browser":

   .. image:: pics/d_3.png

#. Раскроется список, в котором выберем метрику "temp" и нажмём кнопку "Use query". После неё - кнопку "Apply" в правом верхнем углу:

   .. image:: pics/d_4.png

#. На первой нашей доске, в первой панели увидим данные метрики:

   .. image:: pics/d_5.png