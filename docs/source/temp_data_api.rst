data/get
========

Тип запроса - HTTP, GET.

http://<server>/data

Запрос
------

.. code-block:: JSON

   {
        "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
        "start": "2023-01-10T12:00:00+03:00",
        "finish": "2023-01-20T12:00:00+03:00",
        "format": true
   }

где:

**tagId** (str | [str])- идентификатор (GUID) или массив идентификаторов тегов; обязательный;

**start** (int, str) - начало запрашиваемого периода; может быть либо целым
числом и в этом случае - это количество микросекунд с 1970-01-01 00:00:00 UTC,
либо строкой - тогда это метка времени в формате ISO8601. Учитывается временная
зона. Если зона не указана, принимается равной UTC (00:00).

**finish** (int, str) - окончание запрашиваемого периода; если отсутствует
в запросе, то принимается равным текущему моменту времени;

**format** (bool) - если = `False` (по умолчанию), то метки времени
возвращаются в виде целых чисел, если `True` - в виде строк формата
ISO8601 (см. описание флага **start**)

Ответ
-----

.. code-block:: JSON

   {
        "data": [
            {
                "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
                "data": [
                    {
                        "x": "2023-01-10T12:00:00+03:00",
                        "y": 1,
                        "q": null
                    },
                    {
                        "x": "2023-01-11T10:12:34.123123+03:00",
                        "y": 1,
                        "q": null
                    }
                ]
            },
            {
                "tagId": "11111111-2222-3333-4444-555555555555",
                "data": [
                    {
                        "x": "2023-01-10T12:00:00+03:00",
                        "y": 2,
                        "q": null
                    },
                    {
                        "x": "2023-01-11T10:12:34.123123+03:00",
                        "y": 2,
                        "q": null
                    },
                    {
                        "x": "2023-01-12T11:12:34.123123+03:00",
                        "y": 2,
                        "q": null
                    }
                ]
            }
        ]
   }

**x** (int, str) - метка времени;

**y** (int | float | str | json | None) - значение тега на указанную метку времени;

**q** (int | None) - качество значения; в настоящий момент не используется;

Примеры
-------
Получить текущее значение тега(-ов)
"""""""""""""""""""""""""""""""""""
Метка времени будет возвращена как целое число.

.. code-block:: JSON

   {
        "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37"
   }

Метка времени будет возвращена строкой.

.. code-block:: JSON

   {
        "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
        "format": true
   }

Получить текущие значения двух тегов.

.. code-block:: JSON

   {
        "tagId": ["85e7d8de-34c8-103d-9bc1-2954813f6f37", "11111111-2222-3333-4444-555555555555"],
        "format": true
   }

Получить данные тега за период
""""""""""""""""""""""""""""""
Получить данные тега с определённого момента времени до текущего момента:

.. code-block:: JSON

   {
        "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
        "start": "2023-01-10T12:20:37+03:00",
        "format": true
   }

Получить данные за определённый период.

.. code-block:: JSON

   {
        "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
        "start": "2023-01-10T12:20:37+03:00",
        "finish": "2023-01-20T00:00:00+03:00",
        "format": true
   }

Получить данные на определённую метку времени
"""""""""""""""""""""""""""""""""""""""""""""

.. code-block:: JSON

   {
        "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
        "finish": "2023-01-20T00:00:00+03:00"
   }

data/set
========

Тип запроса - HTTP, POST.

http://<server>/data

Формат тела запроса совпадает с ответом команды `data/get`.

Запрос
------

.. code-block:: JSON

   {
        "data": [
            {
                "tagId": "85e7d8de-34c8-103d-9bc1-2954813f6f37",
                "data": [
                    {
                        "x": "2023-01-20T00:00:00+03:00",
                        "y": 1,
                        "q": None
                    }
                ]
            }
        ]
   }

При отсутствии метки времени `x` за метку принимается текущий момент времени
(на сервере).
Ключ `q` может отсутствовать.
