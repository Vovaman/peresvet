FROM nginx/unit:1.28.0-python3.10

WORKDIR /home
RUN pip3 install pipenv

RUN apt-get update && apt-get install -y --no-install-recommends gcc \
    build-essential python3-dev \
    libldap2-dev libsasl2-dev tox lcov valgrind

# для каждого сервиса создадим свой каталог -------------------
WORKDIR /usr/src
RUN mkdir dataStorages_app_psql
COPY src/services/dataStorages/app/Pipfile /usr/src/dataStorages_app_psql/

WORKDIR /usr/src/dataStorages_app_psql
RUN PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy

# копируем исходники --------------------------------------------
ADD src/common/ /usr/src/dataStorages_app_psql/src/common
COPY src/__init__.py /usr/src/dataStorages_app_psql/src/
RUN rm -r /usr/src/dataStorages_app_psql/src/common/__pycache__
WORKDIR /usr/src/dataStorages_app_psql/src
RUN mkdir services
WORKDIR /usr/src/dataStorages_app_psql/src/services
ADD src/services/dataStorages/app dataStorages/app_psql
WORKDIR /usr/src/dataStorages_app_psql
# ------------------------------------------------------------

RUN addgroup --gid 1024 volume_group
RUN usermod -a -G volume_group unit

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

COPY docker/docker-files/dataStorages/config_nginx.unit_dataStorages.test.json /docker-entrypoint.d/
#COPY docker/docker-files/dataStorages/config_nginx.unit_dataStorages.psql.json /docker-entrypoint.d/

EXPOSE 80
