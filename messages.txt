Сервисы каждой сущности публикуют сообщения, касающиеся изменений в модели и сообщения, генерируемые логикой функционирования данной сущности.
Обменник - типа "topic".

Сервис <сущность>_api_crud:
Принимает сообщения:
  1. <сущность>.client.create (RPC)
  2. <сущность>.client.read.<id экземпляра сущности> (RPC)
  3. <сущность>.client.update.<id экземпляра сущности>
  4. <сущность>.client.delete.<id экземпляра сущности>
Публикует сообщения:
  1. <сущность>.model.create (RPC)
  2. <сущность>.model.read.<id экземпляра сущности> (RPC)
  3. <сущность>.model.update.<id экземпляра сущности>
  4. <сущность>.model.delete.<id экземпляра сущности>

Сервис <сущность>_model_crud:
Принимает сообщения:
  1. <сущность>.model.create (RPC)
  2. <сущность>.model.read.<id экземпляра сущности> (RPC)
  3. <сущность>.model.update.<id экземпляра сущности>
  4. <сущность>.model.delete.<id экземпляра сущности>
публикует сообщения:
  1. <сущность>.model.created.<id экземпляра сущности>
  2. <сущность>.model.mayUpdate.<id экземпляра сущности> (RPC)
  3. <сущность>.model.updating.<id экземпляра сущности> (RPC)
  4. <сущность>.model.updated.<id экземпляра сущности>
  5. <сущность>.model.mayDelete.<id экземпляра сущности> (RPC)
  6. <сущность>.model.deleting.<id экземпляра сущности> (RPC)
  7. <сущность>.model.deleted.<id экземпляра сущности>

Сервис <сущность>_app:
Принимает сообщения:
  1. <сущность>.model.mayUpdate.<id экземпляра сущности> (RPC)
  2. <сущность>.model.updating.<id экземпляра сущности> (RPC)
  3. <сущность>.model.updated.<id экземпляра сущности>
  4. <сущность>.model.mayDelete.<id экземпляра сущности> (RPC)
  5. <сущность>.model.deleting.<id экземпляра сущности> (RPC)
Где "сущность" - "своя" сущность, а также любые другие.
Например, сервис <dataStorages>_app принимает подобные сообщения для сущностей: dataStorages, tags, alerts.
Также сервис принимает любые другие сообщения от других сервисов, всё зависит от логики приложения.
